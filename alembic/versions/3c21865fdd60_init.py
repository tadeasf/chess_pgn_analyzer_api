"""init

Revision ID: 3c21865fdd60
Revises: 282097ac9157
Create Date: 2024-09-16 21:27:40.885859

"""

from typing import Sequence, Union
import sqlalchemy as sa
import sqlmodel
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "3c21865fdd60"
down_revision: Union[str, None] = "282097ac9157"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "player",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("avatar", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("location", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("country", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("joined", sa.DateTime(), nullable=False),
        sa.Column("last_online", sa.DateTime(), nullable=False),
        sa.Column("followers", sa.Integer(), nullable=False),
        sa.Column("is_streamer", sa.Boolean(), nullable=False),
        sa.Column("twitch_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fide", sa.Integer(), nullable=True),
        sa.Column("last_updated", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_player_username"), "player", ["username"], unique=False)
    op.create_table(
        "archive",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column("month", sa.Integer(), nullable=False),
        sa.Column("url", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("downloaded", sa.Boolean(), nullable=False),
        sa.Column("last_download", sa.DateTime(), nullable=True),
        sa.Column("is_current_month", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["player.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "game",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("game_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("url", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("pgn", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("analyzed", sa.Boolean(), nullable=False),
        sa.Column("analysis_result", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("white_username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("black_username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("white_rating", sa.Integer(), nullable=False),
        sa.Column("black_rating", sa.Integer(), nullable=False),
        sa.Column("white_result", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("black_result", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=True),
        sa.Column("end_time", sa.DateTime(), nullable=False),
        sa.Column("time_control", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("rules", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("eco", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("tournament", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("match", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["player.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_game_game_id"), "game", ["game_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_game_game_id"), table_name="game")
    op.drop_table("game")
    op.drop_table("archive")
    op.drop_index(op.f("ix_player_username"), table_name="player")
    op.drop_table("player")
    # ### end Alembic commands ###
