name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag api:$(date +%s)


# name: Release Docker Image

# on:
#   release:
#     types: [published]

# env:
#   DOCKER_REPO: your-dockerhub-username/your-repo-name  # Replace with your Docker Hub repository or remove if not using

# jobs:
#   build-and-release:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v3

#     - name: Build Docker image
#       uses: docker/build-push-action@v5
#       with:
#         context: .
#         push: false
#         tags: ${{ env.DOCKER_REPO }}:${{ github.event.release.tag_name }}
#         outputs: type=docker,dest=/tmp/docker-image.tar

#     - name: Load Docker image
#       run: docker load --input /tmp/docker-image.tar

#     # Optional: Push to Docker Hub
#     - name: Login to Docker Hub
#       if: env.DOCKER_REPO != ''
#       uses: docker/login-action@v3
#       with:
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}

#     - name: Push to Docker Hub
#       if: env.DOCKER_REPO != ''
#       run: docker push ${{ env.DOCKER_REPO }}:${{ github.event.release.tag_name }}

#     - name: Update release
#       uses: softprops/action-gh-release@v1
#       with:
#         files: /tmp/docker-image.tar
#         body: |
#           Docker image for this release:
#           `${{ env.DOCKER_REPO }}:${{ github.event.release.tag_name }}`
          
#           You can pull this image with:
#           ```
#           docker pull ${{ env.DOCKER_REPO }}:${{ github.event.release.tag_name }}
#           ```
          
#           Or you can download the image file from the assets and load it locally:
#           ```
#           docker load --input docker-image.tar
#           ```